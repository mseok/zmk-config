/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        lparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        rparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <21 22>;
        };
    };

    behaviors {
        hold_tap_behavior: hold_tap_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                            &kp W  &kp E             &kp R      &kp T                              &kp Y      &kp U            &kp I                             &kp O    &kp P                                 &none
&none  &kp A                            &kp S  &kp D             &kp F      &kp G                              &kp H      &kp J            &kp K                             &kp L    &kp APOS                              &none
&none  &hold_tap_behavior LEFT_SHIFT Z  &kp X  &kp C             &kp V      &kp B                              &kp N      &kp M            &kp COMMA                         &kp DOT  &hold_tap_behavior RIGHT_SHIFT SLASH  &none
                                               &kp LEFT_COMMAND  &lt 2 TAB  &hold_tap_behavior LCTRL RETURN    &kp SPACE  &lt 1 BACKSPACE  &hold_tap_behavior RIGHT_ALT TAB
            >;
        };

        number_layer {
            bindings = <
&none  &kp GRAVE       &none         &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp PIPE         &none         &kp EQUAL  &kp PLUS        &none       &none            &none
&none  &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4       &kp N5           &kp NUMBER_6  &kp N7     &kp N8          &kp N9      &kp N0           &none
&none  &kp LEFT_SHIFT  &none         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH    &none         &kp MINUS  &kp UNDERSCORE  &kp PERIOD  &kp RIGHT_SHIFT  &none
                                     &none             &none              &none            &none         &none      &none
            >;
        };

        navigation_layer {
            bindings = <
&none  &none           &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2     &none                   &none     &none          &none         &none      &none      &none
&none  &kp LCTRL       &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC    &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none      &none
&none  &kp LEFT_SHIFT  &kp C_PREV    &kp C_PLAY         &kp C_NEXT       &kp C_BRIGHTNESS_DEC    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp RSHFT  &none
                                     &none              &none            &none                   &trans    &none          &none
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
